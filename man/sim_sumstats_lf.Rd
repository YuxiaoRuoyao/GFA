% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_sumstats_lf.R
\name{sim_sumstats_lf}
\alias{sim_sumstats_lf}
\title{Simulate summary stats}
\usage{
sim_sumstats_lf(
  F_mat,
  N,
  J,
  h_2_trait,
  omega,
  h_2_factor,
  pi_L,
  pi_theta,
  R_E,
  R_LD,
  g_F,
  nz_factor,
  scale_factor,
  add = FALSE,
  overlap_prop = 1
)
}
\arguments{
\item{F_mat}{factor matrix M by K}

\item{N}{GWAS sample size}

\item{J}{Total number of SNPs to generate}

\item{h_2_trait}{Heritability of each trait. Length M vector.}

\item{omega}{Proportion of SNP heritability mediated by factors. Length M vector.}

\item{h_2_factor}{Heritability of each factor. Length K vector.}

\item{pi_L}{Proportion of non-zero elements in L_k. Length K factor}

\item{pi_theta}{Proportion of non-zero elements in theta. Scalar.}

\item{R_E}{Environmental trait correlation not mediated by factors. M by M pd matrix}

\item{g_F}{Function from which non-zero elements of F are generated}

\item{R_LD_list}{List of eigen decompositions of LD correlation matrices, may be missing.}

\item{relative_pve}{Relative pve contributed by each factor. Length K.}

\item{pi_F}{Proportion of non-zero elements of F.}
}
\description{
Simulate summary statistcs for fully overlapping GWAS with no LD
}
\details{
note: have removed relative_pve so below is not correct. will update,
omega, h2_trait, and relative_pve constrain the rows and columns of F. The sum of squared elements in row m must equal
omega[m]*h2_trait[m]. relative_pve is normalized to sum to sum(omega*h2_trait). After this normalization the sum of
squared elements in column k must equal relative_pve[k]. The function `scale_F` iteratively rescales rows and columns
until they have the desired sums. This allows us to preserve the input sparsity structure and approximate distribution
magnitudes and still achieve the desired row and column squared sums.

If F_mat is provided it is rescaled as described. In this case relative_pve is optional.

If F_mat is not provided, it will be generated using the `generate_F2` function.
In this case g_F and nz_factor must be provided. scale_factor is an optional argument that can
be use to adjust the relative scalings of the factors. All of the elements
in F are generated iid from a mixture of a point mass at 0 and g_F. The matrix is then
rescaled according to the constraints.


With this setup it is possible to specify a setting that is impossible. Usually this occurs if the heritability
of the factors is low but the heritability of the traits is high leading to a contradiction. Right now the function
will just return an error if that happens.
}
